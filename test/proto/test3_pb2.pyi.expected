# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    List as typing___List,
    Optional as typing___Optional,
    Text as typing___Text,
    Tuple as typing___Tuple,
    cast as typing___cast,
    overload as typing___overload,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class OuterEnum(int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> OuterEnum: ...
    @classmethod
    def keys(cls) -> typing___List[str]: ...
    @classmethod
    def values(cls) -> typing___List[OuterEnum]: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[str, OuterEnum]]: ...
UNKNOWN = typing___cast(OuterEnum, 0)
FOO3 = typing___cast(OuterEnum, 1)
BAR3 = typing___cast(OuterEnum, 2)

class OuterMessage3(google___protobuf___message___Message):
    a_bool = ... # type: bool

    def __init__(self,
        a_bool : typing___Optional[bool] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> OuterMessage3: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"a_bool"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[b"a_bool"]) -> None: ...

class SimpleProto3(google___protobuf___message___Message):
    a_string = ... # type: typing___Text
    a_repeated_string = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
    outer_enum = ... # type: OuterEnum
    a_oneof_1 = ... # type: typing___Text
    a_oneof_2 = ... # type: typing___Text
    b_oneof_1 = ... # type: typing___Text
    b_oneof_2 = ... # type: typing___Text

    @__builtins__.property
    def outer_message(self) -> OuterMessage3: ...

    def __init__(self,
        a_string : typing___Optional[typing___Text] = None,
        a_repeated_string : typing___Optional[typing___Iterable[typing___Text]] = None,
        outer_enum : typing___Optional[OuterEnum] = None,
        outer_message : typing___Optional[OuterMessage3] = None,
        a_oneof_1 : typing___Optional[typing___Text] = None,
        a_oneof_2 : typing___Optional[typing___Text] = None,
        b_oneof_1 : typing___Optional[typing___Text] = None,
        b_oneof_2 : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SimpleProto3: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"a_oneof",u"a_oneof_1",u"a_oneof_2",u"b_oneof",u"b_oneof_1",u"b_oneof_2",u"outer_message"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"a_oneof",u"a_oneof_1",u"a_oneof_2",u"a_repeated_string",u"a_string",u"b_oneof",u"b_oneof_1",u"b_oneof_2",u"outer_enum",u"outer_message"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"a_oneof",b"a_oneof",u"a_oneof_1",b"a_oneof_1",u"a_oneof_2",b"a_oneof_2",u"b_oneof",b"b_oneof",u"b_oneof_1",b"b_oneof_1",u"b_oneof_2",b"b_oneof_2",u"outer_message",b"outer_message"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"a_oneof",b"a_oneof_1",b"a_oneof_2",b"a_repeated_string",b"a_string",b"b_oneof",b"b_oneof_1",b"b_oneof_2",b"outer_enum",b"outer_message"]) -> None: ...
    @typing___overload
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"a_oneof",b"a_oneof"]) -> typing_extensions___Literal["a_oneof_1","a_oneof_2"]: ...
    @typing___overload
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"b_oneof",b"b_oneof"]) -> typing_extensions___Literal["b_oneof_1","b_oneof_2"]: ...
